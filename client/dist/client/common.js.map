{"version":3,"sources":["webpack:///./src/app/modules/auth/shared/model/user.ts","webpack:///./src/app/modules/auth/shared/service/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;IACE,cACO,EAAU,EACV,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,gBAAwB;QAJxB,OAAE,GAAF,EAAE,CAAQ;QACV,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,qBAAgB,GAAhB,gBAAgB,CAAQ;IAC5B,CAAC;IAEN,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACT0C;AACK;AAIT;AAKvC;IAKE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHpD,WAAM,GAAG,OAAO,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;IAEmB,CAAC;IAE1D,kCAAY,GAAnB,UAAoB,IAAU;QACrB,gBAAE,EAAE,wCAAgB,EAAE,yFAAW,CAAS;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAEM,+BAAS,GAAhB,UAAiB,IAAU;QAClB,sBAAK,EAAE,wBAAQ,EAAE,oFAAW,CAAS;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,WAAW,EAAE,EAAC,KAAK,SAAE,QAAQ,YAAC,CAAC,CAAC;IACpE,CAAC;IACM,+BAAS,GAAhB;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IACM,8BAAQ,GAAf;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEM,6BAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,gBAAgB,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxG,CAAC;IAEM,4BAAM,GAAb;QACE,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IA9BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU,EAAkB,sDAAM;OALjD,WAAW,CA+BvB;IAAD,kBAAC;CAAA;AA/BuB","file":"common.js","sourcesContent":["export class User {\n  constructor(\n  public id: number,\n  public username: string,\n  public email: string,\n  public password: string,\n  public confirm_password: string\n  ) {}\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Observer} from 'rxjs';\nimport {User} from '../model/user';\nimport {Token} from '../model/token';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _users = 'Users';\n  private _login_user = this._users + '/login';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  public registerUser(user: User): Observable<User> {\n    const {id, confirm_password, ...restUser} = user;\n    return this.http.post<User>(this._users, restUser);\n  }\n\n  public loginUser(user: User): Observable<Token> {\n    const {email, password, ...restUser} = user;\n    return this.http.post<Token>(this._login_user, {email, password});\n  }\n  public getUserId() {\n    return localStorage.getItem('userId');\n  }\n  public getToken() {\n    return localStorage.getItem('token');\n  }\n\n  public getUser(): Observable<User> {\n    return this.http.get<User>(this._users + '/' + this.getUserId() + '?access_token=' + this.getToken());\n  }\n\n  public logout() {\n    localStorage.clear();\n    this.router.navigate(['auth/login']);\n  }\n}\n"],"sourceRoot":""}